exports.process = function (xmlObj) {
    // Create result object, containing objectives object
    var result = {};
    result['objectives'] = {};
    result['completed'] = false;

    // Only one objective for Animal Maze (get all the honey pots)
    result['objectives']['Run'] = false;
    result['objectives']['Complete'] = false;
    result['objectives']['WCar'] = {};
    result['objectives']['BCar'] = {};
    result['objectives']['WCar']['event'] = false;
    result['objectives']['WCar']['eventsprite'] = false;
    result['objectives']['WCar']['glide'] = false;
    result['objectives']['BCar']['event'] = false;
    result['objectives']['BCar']['eventsprite'] = false;
    result['objectives']['BCar']['glide'] = false;
    result.html = " ";

    var error_type = 0;
    result['error_type'];
    var carNames = ["WCar", "BCar"];
    var lightNames = ["WLight", "BLight"];
    var targetNames = ["WParkSpot", "BParkSpot"];
    var current;
    var index;
    var eventType = []; 
    var motionBlock = [];


 //#################################################################################//
    // Parse XML
try{

    // Find the variable named "completed" or "tested"
    xmlObj.project.variables[0].variable.forEach(function(v){
        // Variable "tested": if 1 -> continue analysis, if 0 -> all false
        if(v.$.name == "tested") {
            if(v.l == "1")
                result['objectives']['Run'] = true;
        }
        // Variable "completed": if 1 -> true, 0 -> false
        else if(v.$.name == "completed") {
            if(v.l == "1")
                result['objectives']['Complete'] = true;  
        }
       
    });
    	xmlObj.project.stage[0].sprites[0].sprite.forEach(function(s){
	   index = carNames.indexOf(s.$.devName);
	   // if it is a car!
	   if(index > -1) { 
		current = s.$.devName;
		// there are scripts
		if (s.scripts[0].script) {
		   s.scripts[0].script.forEach(function(i){
		   	// event type
		   	if(i.block[0].$.s == "otherReceiveClick" && i.block[0].$.isInert == "false"){
		  	   result['objectives'][current]['event'] = true;
		 	   // clicking correct obj
		 	   if (i.block[0].l[0] == lightNames[index]){
				result['objectives'][current]['eventsprite'] = true;
                                i.block.forEach(function(b){
//result.html += b.$.s + b.l[0];
                                  if (((b.$.s == "doGlidetoObject") && (b.l[0] == targetNames[index])) ||
                                       (b.$.s == "doSpeedGlideSteps") || (b.$.s == "doGlideDirection"))
                                    	result['objectives'][current]['glide'] = true;
                                   else if (b.$.s == "doGotoObject")
                                   	result.html += "<b>place at</b> is faster than a car drives!  Use a glide block!<br>";
                                }); // for each block in script
		 	    }  // correct light name
		 	} // if otherReceiveClick script 
		   }); // for each script
	 	}// if there are scripts
	   } // if it is a car!
	}); // for each sprite
}
    catch(err){}    
	
 	console.log(eventType.length);
	console.log(motionBlock.length);


    completed = true;
    // White car
    if (!result['objectives']['WCar']['event'])
     {
        error_type = 1;
        result.html += "Make the <b>white car</b> move only when the <b><i>white light is clicked</i></b>. <br>Look at the event blocks: which event would work for this project?<br>"; 
        completed = false;
    }
    else if (!result['objectives']['WCar']['eventsprite'])
    {
	error_type = 17;
        result.html += "Great start! You have the right event block for the white car, but you need to use the little black triangle to choose the right sprite.  Which sprite should start this script?<br>";
        completed = false;
    }
    else if (!result['objectives']['WCar']['glide'])
    {
	error_type = 3;
        result.html += "Now use a glide block to move the white car to the parking spot!<br>";
        completed = false;
    }

    // Blue car
    if (!result['objectives']['BCar']['event'])
    {
        error_type = 1;
        result.html += "Make the<b> blue car</b> move only when the <b><i>blue light is clicked</i></b>. <br>Look at the event blocks: which event would work for this project?<br>"; 
        completed = false;
    }
    else if (!result['objectives']['BCar']['eventsprite'])
    {
	error_type = 17;
        result.html += "Great start! You have the right event block for the blue car, but you need to use the little black triangle to choose the right sprite.  Which sprite should start this script?<br>";
        completed = false;
    }
    else if (!result['objectives']['BCar']['glide'])
    {
	error_type = 3;
        result.html += "Now use a glide block to move the blue car to the parking spot!<br>";
        completed = false;
    }

    if (! result['objectives']['Run'])
    {
        completed = false;
	result.html += "Remember to test your scripts before checking your work!";
    }
    else if (completed && !result['objectives']['Complete'])
    {
        completed = false;
	result.html += "Great work so far! You're using the correct event and a good motion block, but it seems like the cars aren't both making it to the target! You can do it!";
    }
    else if (completed) 
    {
	result['completed'] = true;
    	error_type = 0;
    }
				
    
    result['error_type'] = error_type;
    return result;

  };

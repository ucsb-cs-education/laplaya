// Author: ? and Diana Franklin
// Requirements:  Choose a dancer, make a script on sprite click,
// change costume 3 times (with two waits in between)
// Status: Removing old code
//

exports.process = function (xmlObj) {
  // Create result object, containing objectives object
  var result = {};
  var events = {};
  var sprite_names = ["Ballerina","CoolGirl","BreakDancer"];
  var sprite_name;

  events.num_waits = 0;
  events.num_costume = 0;
  events.progress = 0;
  events.progress_txt = "";
  events.Run = false;
  events.receive_click = false;


  
  events.initialized = false;
  events.html = "";
  
  for (var i = 0; i < sprite_names.length; i++)
  {
    sprite_name = sprite_names[i];
   // events[sprite_name+'initialize'] = false; // costume in get ready script
    events[sprite_name+'num_waits'] = 0;
    events[sprite_name+'num_costume'] = 0;
  }



    //##########################################################################//
                            //Parse XML//
  try{
    // for each sprite
    xmlObj.project.stage[0].sprites[0].sprite.forEach(function(sprites){
      var sprite_name = sprites.$.devName;
      events.html += "sprite: " + sprite_name + ", ";
      // Costume changes
      if(sprite_names.indexOf(sprite_name) > -1) {
      	//events.html += "index of sprite>-1";
        sprites.scripts[0].script.forEach(function(scr){
          // need to choose on sprite click event
          if ((scr.block.length >= 2) && (src.block[0].$.isInert == "false")) { //if the script is >= 2 blocks long and is NOT locked
            events.html = "length >1 and not inert and not frozen";
            if (scr.block[0].$.s == "receiveClick" && scr.block[0].$.isFrozen == "false"){
              events.receive_click = true;
              events.html += "on sprite click\n";
              scr.block.forEach(function(blocks){
                events.html += "block: " + blocks.$.s + ", ";

                if (blocks.$.s == "doRepeat"){// if its in a loop:
                  var n_repeats = blocks.l[0];
                  blocks.script.forEach(function(w){
                    w.block.forEach(function(b){
                      if (b.$.s == "doWearNextCostume"){
                        events[sprite_name+'num_costume'] += n_repeats;
                      }
                      if (b.$.s == "doWait"){
                        if (b.l[0] !== 0)
                          events[sprite_name+'num_waits'] += n_repeats;
                      }
                    });
                  });
                }

                if ((blocks.$.s == "doSwitchToCostume") || (blocks.$.s == "doWearNextCostume")){
                //result.html += sprite_name + ": switch costume!<br>";
                  if (blocks.l[0]) {
                    //result.html += sprite_name + ": costume!<br>";
                    events[sprite_name+'num_costume'] += 1;
                  }
                }

                if ((blocks.$.s == "doWait")){
                  if (blocks.l[0] !== 0) {
                    events[sprite_name+'num_waits'] += 1;
                  }
                }

              });
            }
          }
          //events.html += "after inert if";
        });
      }
    });//}

    // Find the variable named "completed" or "tested"
    xmlObj.project.variables[0].variable.forEach(function(v){
        // Variable "tested": if 1 -> continue analysis, if 0 -> all false
        if(v.$.name == "tested") {
            if(v.l == "1")
              events.Run = true;
        }
    });
     
  }
  catch(err){
    events.html += "ERROR";
  }
  finally{
 //##########################################################################//
                            //Feedback//
    var completed = false;
    var waits = 0;
    var costumes = 0;
    for (i = 0; i < sprite_names.length; i++)
    {
      sprite_name = sprite_names[i];
      waits = events[sprite_name+'num_waits'];
      costumes = events[sprite_name+'num_costume'];
      events.num_waits = Math.max(waits, events.num_waits);
      events.num_costume = Math.max(costumes, events.num_costume);
      if (waits > 1 && costumes > 2)
      	completed = true;
    } 

    if (events.receive_click){
      events.progress += 0.5;
      events.progress_txt += "has on sprite clicked\n";
    } else {
      events.progress_txt += "no on sprite clicked\n";
    }

	if (completed){
		events.progress += 24.5;
		events.progress += "one sprite is done";
	
	} else {
		if (events.num_waits === 0){
		  events.progress_txt += "doesn't have any waits\n"; 
		} else if (events.num_waits == 1){
		  events.progress += 2;
		  events.progress_txt += "only has one wait\n";
		} else {
		  events.progress += 4;
		  events.progress_txt += "has 2 or more waits\n";
		}

		if (events.num_costume === 0){
		  events.progress_txt += "no costume changes\n";
		} else if (events.num_costume == 1){ 
		  events.progress += 6;
		  events.progress_txt += "has one costume change\n";
		} else if (events.num_costume == 2){
		  events.progress += 12;
		  events.progress_txt += "has two costume changes\n";
		} else {
		  events.progress += 18;
		  events.progress_txt += "has three or more costume changes\n";
		}
	}


    // if (events.Run){
    //   events.progress += 1;
    //   events.progress_txt += "tested.";
    // }

    if (events.progress == 25){
      events.progress_txt = "completed";
    }

    result.results = events;
    return result;
  }
};

exports.process = function (xmlObj) {
    // Create result object, containing objectives object
    var result = {};
  	var events = {};
    events.completed = false;

    // Only one objective for Animal Maze (get all the honey pots)
    events.Run = false;
    events.Complete = false;
    events.WCar_event = false;
    events.WCar_eventsprite = false;
    events.WCar_glide = false;
    events.BCar_event = false;
    events.BCar_eventsprite = false;
    events.BCar_glide = false;
    result.html = " ";

    var error_type = 0;
    result.error_type = -1;
    var carNames = ["WCar", "BCar", "White Car", "Blue Car"];
    var lightNames = ["WLight", "BLight", "White Traffic Light", "Blue Traffic Light"];
    var targetNames = ["WParkSpot", "BParkSpot", "White Car Parking", "Blue Car Parking"];
    var current;
    var index;
    var eventType = []; 
    var motionBlock = [];


 //#################################################################################//
    // Parse XML
try{

    // Find the variable named "completed" or "tested"
    xmlObj.project.variables[0].variable.forEach(function(v){
        // Variable "tested": if 1 -> continue analysis, if 0 -> all false
        if(v.$.name == "tested") {
            if(v.l == "1")
                result.Run = true;
        }
        // Variable "completed": if 1 -> true, 0 -> false
        else if(v.$.name == "completed") {
            if(v.l == "1")
                events.Complete = true;  
        }
       
    });
    	xmlObj.project.stage[0].sprites[0].sprite.forEach(function(s){
	   index = carNames.indexOf(s.$.devName);
	   // if it is a car!
	   if(index > -1) { 
		current = s.$.devName;
		// there are scripts
		if (s.scripts[0].script) {
		   s.scripts[0].script.forEach(function(i){
		   	// event type
		   	if(i.block[0].$.s == "otherReceiveClick" && i.block[0].$.isInert == "false"){
		  	   events.current_event = true;
		 	   // clicking correct obj
		 	   if (i.block[0].l[0] == lightNames[index]){
				events.current_eventsprite = true;
                                i.block.forEach(function(b){
                                  if ((b.$.s == "doSpeedGlidetoObject" && b.l[1] == targetNames[index]) ||
                                       b.$.s == "doSpeedGlideSteps" || b.$.s == "doGlideDirection")
                                    	events.current_glide = true;
                                   else if (b.$.s == "doGotoObject")
                                   	result.html += "<b>place at</b> is faster than a car drives!  Use a glide block!<br>";
                                }); // for each block in script
		 	    }  // correct light name
		 	} // if otherReceiveClick script 
		   }); // for each script
	 	}// if there are scripts
	   } // if it is a car!
	}); // for each sprite
}
    catch(err){}    
	
 	console.log(eventType.length);
	console.log(motionBlock.length);


    // White car
    if (!events.WCar_event)
    {
      events.progress = 0;
      events['progress.txt'] = "White: not started\n";
    }
    else if (!events.WCar_eventsprite)
    {
      events.progress = 1;
      events['progress.txt'] = "White: event\n";
    }
    else if (!events.WCar_glide)
    {
      events.progress = 2;
      events['progress.txt'] = "White: event sprite correct\n";
    }
  	else
    {
      events.progress = 3;
      events['progress.txt'] = "White: glide block correct\n";
    }

    // Blue car
    if (!events.BCar_event)
    {
      events['progress.txt'] += "White: not started\n";
    }
    else if (!events.BCar_eventsprite)
    {
      events.progress += 10;
      events['progress.txt'] += "White: event\n";
    }
    else if (!events.BCar_glide)
    {
      events.progress += 20;
      events['progress.txt'] += "White: event sprite correct\n";
    }
    else
    {
      events.progress += 30;
      events['progress.txt'] += "White: glide block correct\n";
    }

    if (! events.Run)
    {
    }
    else if (!events.Complete)
    {
      events.progress += 40;
      events['progress.txt'] += "tested";
    }
    else
    {
			events.completed = true;
      events.progress = 80;
      events['progress.txt'] = "completed";
    }
				
    
    result.error_type = error_type;
    return result;

  };

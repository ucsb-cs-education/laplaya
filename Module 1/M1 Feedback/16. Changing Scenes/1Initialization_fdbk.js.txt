
// Author: Iris and Diana Franklin
// Project:  Initialize scene changes.  Data structures show what the initialization should look like
// Status: Looks for correct blocks but doesn't undo when incorrect ones encountered
// Status: Everything works except it doesn't check for size.  Need to add that for the rainbow.

exports.process = function (xmlObj) {
    var result = {};
    result['objectives'] = {};



    result['objectives']['Plant_script'] = false;
    result['objectives']['Plant_event'] = false;
    result['objectives']['Plant_costume'] = false;
    result['objectives']['Plant_othercostume'] = true;
    result['objectives']['Plant_show'] = false;
    result['objectives']['Plant_othershow'] = true;

    result['objectives']['Cloud_script'] = false;
    result['objectives']['Cloud_event'] = false;
    //result['objectives']['Cloud_costume'] = false;
    //result['objectives']['Cloud_othercostume'] = false;
    result['objectives']['Cloud_show'] = false;
    result['objectives']['Cloud_othershow'] = true;

    result['objectives']['Two_script'] = false;
    result['objectives']['Two_event'] = false;
     result['objectives']['Two_costume'] = false;
     result['objectives']['Two_othercostume'] = true;

    result['objectives']['One_script'] = false;
    result['objectives']['One_event'] = false;
    result['objectives']['One_othercostume'] = true;

    result['objectives']['Sun_script'] = false;
    result['objectives']['Sun_event'] = false;
    result['objectives']['Sun_show'] = false;
    result['objectives']['Sun_othershow'] = true;

    result['objectives']['Rainbow_script'] = false;
    result['objectives']['Rainbow_event'] = false;
    result['objectives']['Rainbow_show'] = false;
    result['objectives']['Rainbow_othershow'] = true;
    result['objectives']['Rainbow_size'] = false;
    result.html = "";

    result['error_type'];
    var error_type;

    // check if one or two are hidden and if sun/rainbow have a costume

    var current ; 

    var initial_state = {};
    initial_state["Plant"] = {costume: "Sapling", show: "show", size: null}; // show
    //initial_state["Cloud"] = {costume: “Raining”, show: "show", size: null};  // show
    initial_state["Two"] = {costume: "normal", show: null, size: null };
    initial_state["One"] = {costume:"selected", show: null, size: null };

    // Sun & rainbow: hide
    initial_state["Sun"] = {costume: null , show: "hide"};
    initial_state["Rainbow"] = {costume: null , show: "hide", size: 135};

    // Cloud: show only - no costume necessary
    initial_state["Cloud"] = {costume: null, show: "show", size: null};  // show

//    initial_state["Sprite"] = {costume: null , show:null, size: null};

    var noScript = [];
    var wrongEvent = [];
    var showSprite = [];
    var setSize = [];
    var costume = [];
    var correct = [];



    try{
        //################################################################//
        //Helper functions

        function checkSwitchCostume(block){
            console.log("costume?");
            var block_type = block.$.s;
            if (block_type == "doSwitchToCostume")
	    {
		if (block.l[0] == initial_state[current].costume)
                    result['objectives'][current+'_costume'] = true;
	    	else
                    result['objectives'][current+'_othercostume'] = false;
	    }
        }

        function checkSize(block){
            console.log("size?");
            var block_type = block.$.s;
//result.html += "Block: "+block_type+"<br>";
            if (block_type == "setScaleDropDown")
	    {
		var sz = parseInt(block.l[0]);
		var target = initial_state[current].size;
		if ((sz >= target*0.8) && (sz <= target*1.2))
                    result['objectives'][current+'_size'] = true;
	    }
        }

        function checkHideOrShow(block){
            console.log("show?");
            var block_type = block.$.s;
	    var visibility = initial_state[current].show;
	    if ((block_type == "hide") || (block_type == "show"))
	    {
		   if (block_type == visibility)
                	result['objectives'][current+'_show'] = true;
	    	   else
                	result['objectives'][current+'_othershow'] = false;
	    }

        }

        //################################################################//
        // Parse XML

	// go through each sprite to look for scripts
        xmlObj.project.stage[0].sprites[0].sprite.forEach(function(sprites){
            current = sprites.$.devName;
	    // if there is an initial state for this sprite
            if (initial_state[current]){ 
		// if there is no script, then they need to get started!
                if (!sprites.scripts[0].script) 
			noScript.push(current);
		// look at the script
                else 
		{
		   var wrong_event = false;
		   // look through each script
                   sprites.scripts[0].script.forEach(function(scr){
                      	console.log("HERE?");
			// check to see if it is the right event
			var event_name = scr.block[0].$.s;
                    	if (event_name == "receiveGo")
			{
                           result['objectives'][current+'_script'] = true;   
                           result['objectives'][current+'_event'] = true;   
			   // for each block in the script
                   	   scr.block.forEach(function(b){ 
                    	   	console.log("loop");
                    		console.log(current);
                    		if (initial_state[current].costume) 
					checkSwitchCostume(b);
                    		if (initial_state[current].show) 
					checkHideOrShow(b);
				if (initial_state[current].size > 0)
					checkSize(b);
                 	   }); // end for each block in the get ready script
			} // end get ready script
			else if (event_name.indexOf("receive") >= 0)
			{
                           result['objectives'][current+'_script'] = true;   
			   wrong_event = true;
			}
             	   }); // end for each script in the sprite
		// if we didn't find the get ready event, then wrong event!
		
		if (!result['objectives'][current+'_event'])
		{
		   if (wrong_event)
                    	wrongEvent.push(current);
		   else
			noScript.push(current);
		}
		else
		{
		   var crt = true;
		   // if needed a costume but didn't find it (or wrong), then wrong costume!
                   if (initial_state[current].costume && 
			(!result['objectives'][current+'_costume'] || !result['objectives'][current+'_othercostume'] ))
		   {
                    	costume.push(current);
			crt = false;
		   }
                   if (initial_state[current].size && !result['objectives'][current+'_size'])
		   {
		    	setSize.push(current);
			crt = false;
		   }
		   // if needed visibility but didn't find it (or wrong), then wrong visibility!
                   if (initial_state[current].show && 
			(!result['objectives'][current+'_show'] || !result['objectives'][current+'_othershow']))
		   {
                    	showSprite.push(current);
			crt = false;
		   }
		   if (crt)
		   	correct.push(current);
		}
            }
          } // if there is an initial state for this sprite
        }); // for each sprite

    }
    catch(err){
	// if we didn't find the get ready event, then wrong event!
       if (!result['objectives'][current+'_event'])
           wrongEvent.push(current);
	// if needed a costume but didn't find it (or wrong), then wrong costume!
       else if (initial_state[current].costume && 
		(!result['objectives'][current+'_costume'] || result['objectives'][current+'_othercostume'] ))
                    costume.push(current);
	// if needed visibility but didn't find it (or wrong), then wrong visibility!
        else if (initial_state[current].show && 
		(!result['objectives'][current+'_show'] || result['objectives'][current+'_othershow']))
                    showSprite.push(current);
        else if (initial_state[current].size && !result['objectives'][current+'_size'])
	    	setSize.push(current);
	// otherwise, it's correct!
       else 
	    correct.push(current);
    }
    finally{

        //##############################################//
        // Feedback
         var completed = true;
	 error_type = 0;
        for (var property in result['objectives']) {
            if (result['objectives'][property] != true) {
                completed = false;
//result.html += "Not completed: "+property+"<br>";
            }   
        }
        
        // Positive feedback: what they have finished
        if (correct.length > 0){
            result.html += "***Great! Completed sprites: ";
            for (var i = 0; i < correct.length; i++) {
                result.html+= correct[i] + " <br> ";
            }

        }

        var i;
        if (costume.length>0){
            error_type = 21;
            result.html += "***Great start! Make sure you set the starting costume properly!<br>("+costume[0];
	    i = 1;
            while (i < costume.length) {
                result.html += ", "+costume[i];
                i++;
            }
	    result.html += ")<br>";

        }
        if (showSprite.length > 0){
            error_type = 26;
            result.html += "***Good progress!  Make sure you set whether each sprite should be visible (hide/show)!";
	    result.html += "<br>("+showSprite[0];
	    i = 1;
            while (i < showSprite.length){
                result.html += ", "+showSprite[i];
                i++;
            }
	    result.html += ")<br>";
        }
        if (setSize.length > 0){
            error_type = 26;
            result.html += "***Getting there!  Make sure you set the size when required!<br>("+setSize[0];
	    i = 1;
            while (i < setSize.length){
                result.html += ", "+setSize[i];
                i++;
            }
	    result.html += ")<br>";
        }
        if (wrongEvent.length > 0)
        {
            error_type = 1;
            result.html += "***Set up the sprite in the <b><i>get ready (blue square)</i></b> script!<br>(";
	    result.html += wrongEvent[0];
	    i = 1;
            while (i < wrongEvent.length){
                result.html += ", " + wrongEvent[i];
                i++;
            }
	   result.html += ")<br>";
        }
         if (noScript.length > 0)
	{
	    error_type = 1;
            result.html += "***Don't forget to make get ready scripts for: " + noScript[0];
	    i = 1;
            while (i < noScript.length){
                result.html += ", " + noScript[i];
                i++;
            }
	    result.html += "<br>";
	}

        // return
        result['error_type'] = error_type;
        result['completed'] = completed;

        return result;

    }
};


//Edited by Valerie 8/31

exports.process = function (xmlObj) {
    // Create result object, containing objectives object
    var result = {};
    result['objectives'] = {};

    // Init rooster
    result['objectives']['rooster: correct direction'] = false;
    result['objectives']['rooster: go to xy block'] = false;
    result['objectives']['rooster: correct xy coordinates'] = false;
    // Init cat
    result['objectives']['cat: go to xy block'] = false;
    result['objectives']['cat: correct xy coordinates'] = false;

    result['error_type'];
    var error_type;

    var x_rooster = false;
    var y_rooster = false;
    var r_gotoTarget = false;

    var x_cat = false;
    var y_cat = false;
    var c_gotoTarget = false;


    result['objectives']['Run'] = false;
    result.html = "";

    result['error_type'];
    var error_type=0;

    try{
    xmlObj.project.stage[0].sprites[0].sprite.forEach(function(sprites){
        if (sprites.$.devName == "Cat")
        {
            sprites.scripts[0].script.forEach(function(scr){
          //   if (scr.block[0].$.s == "receiveGo"){
                    scr.block.forEach(function(blocks){
                         if ((blocks.$.s == "gotoXYNegative")){
                            result['objectives']['cat: go to xy block'] = true;
                            var x = blocks.l[0];
                            var y = blocks.l[1];
                            if (x >= 425 && x <= 440 ) x_cat = true;
                            if (y >= 235 && y <= 250) y_cat = true;
                            }
                        if (blocks.$.s == "doGotoObject" && blocks.l[0] == "Cat Start Position")
                            c_gotoTarget = true;
                    });
        //}
    });
    }
        if (sprites.$.devName == "Rooster")
        {
            sprites.scripts[0].script.forEach(function(scr){
                //if (scr.block[0].$.s == "receiveGo"){
                    scr.block.forEach(function(blocks){
                        // check if facing correct direction
                        if ( (blocks.$.s == "doFaceTowards" && blocks.l[0] == "Finish Line") ||
                            (blocks.$.s == "setHeading" && blocks.l[0] == "left") ){
                                result['objectives']['rooster: correct direction'] = true; 
                        }
                        if ((blocks.$.s == "gotoXYNegative")){
                            result['objectives']['rooster: go to xy block'] = true;
                            var x = blocks.l[0];
                            var y = blocks.l[1];
                            if (x >= 425 && x <= 440 ) x_rooster = true;
                            if (y >= 145 && y <= 160) y_rooster = true;
                            }
                        if (blocks.$.s == "doGotoObject" && blocks.l[0] == "Rooster Start Position")
                            r_gotoTarget = true;
                    });
               // }
            });
        }

    });
    }
    catch(err){}
    finally{
    // Find the variable named "completed" or "tested"
    xmlObj.project.variables[0].variable.forEach(function(v){
        // Variable "tested": if 1 -> continue analysis, if 0 -> all false
        if(v.$.name == "tested") {
            if(v.l == "1")
                result['objectives']['Run'] = true;
        }
    });
        

    if (x_rooster && y_rooster) result['objectives']['rooster: correct xy coordinates'] = true;
    if (x_cat && y_cat) result['objectives']['cat: correct xy coordinates'] = true;

    // If all objectives are completed, result.completed = true
    var completed = true;
    for (var property in result['objectives']) {
        if (result['objectives'][property] != true) {
            completed = false;
        }
    }

    if (c_gotoTarget){
        error_type = 21;
         result.html = "You have the right idea! We want to get the cat to that cat starting position, but make sure to use the 'place at x: y:' block instead of the 'place at: ' block! Keep trying!";
    }
    else if (! result['objectives']['cat: go to xy block']){
        error_type = 21;
        result.html = "Make sure to use the 'place at x: y: ' block to move the Cat sprite to its starting place. Keep trying!";
    }
     else if (! x_cat) {
        error_type = 22;
        result.html = "Great start! You're using the correct block to move the cat with x/y coordinates! Check that the value of x is between 425 and 440 and try again!";
    }
    else if (! y_cat){
        error_type = 22;
        result.html = "Great start! You're using the correct block to move the cat with x/y coordinates as well as the right x value! Check that the value of y is between 235 and 250 and try again!";
    }

    else if (! result['objectives']['rooster: correct direction']){
        error_type = 8;
        result.html = "Make sure the rooster is initialized to face toward the finish line, to the left! Keep trying!";
    }
    else if (r_gotoTarget) {
        error_type = 21;
     result.html = "You have the right idea! We want to get the rooster to that rooster starting position, but make sure to use the 'place at x: y:' block instead of the 'place at: ' block! Keep trying!";
    }
    else if (! result['objectives']['rooster: go to xy block']){
        error_type = 21;
        result.html = "Great work, you made the rooster face the correct direction! Now use the 'go to x: y: ' block to move the sprite to its starting place. Keep going, you're getting it!";
    }
    else if (! x_rooster) {
        error_type = 22;
        result.html = "Great start! You're using the correct block to move the rooster with x/y coordinates! Check that the value of x is between 425 and 440 and try again!";
    }
    else if (! y_rooster){
        error_type = 22;
        result.html = "Great start! You're using the correct block to move the rooster with x/y coordinates as well as the right x value! Check that the value of y is between 145 and 160 and try again!";
   }
    else if (! result['objectives']['Run']){
        error_type = 2;
        result.html += "You've got the project right, but remember to test your scripts before checking your work!";
}
    else if (completed) error_type = 0;



    result['completed'] = completed;
    result['error_type'] = error_type;
    return result;
}
  };
